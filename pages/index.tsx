import Head from 'next/head';

import {
  useFirestoreCollectionMutation,
  useFirestoreDocument,
  useFirestoreQuery,
  useFirestoreQueryData,
} from '@react-query-firebase/firestore';
import {
  useAuthSignInWithPopup,
  useAuthSignOut,
  useAuthUser,
} from '@react-query-firebase/auth';
import { GoogleAuthProvider } from 'firebase/auth';
import { collection, query, where } from 'firebase/firestore';
import { useCollection } from 'react-query-firestore';
import { auth, db } from '../firebase/firebase.config';
import { options } from '../lib/react-query-firebase.utils';

export default function Home() {
  const user = useAuthUser(['user'], auth, options);
  const signOutMutation = useAuthSignOut(auth);
  const signInMutation = useAuthSignInWithPopup(auth);
  const { data } = useCollection(`users`);

  console.log(data);

  // const usersCollectionRef = collection(db, 'data');

  // const q = useFirestoreQueryData(
  //   ['data'],
  //   usersCollectionRef,
  //   { subscribe: true },
  //   {
  //     onSuccess(snapshot) {
  //       console.log(snapshot);
  //     },
  //     onError(error) {
  //       console.log(error);
  //     },
  //   }
  // );

  // console.log(q);

  if (user.isLoading) {
    return <div>Loading...</div>;
  }

  if (user.error) {
    <div>Not signed in.</div>;
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div>Welcome {user.data && user.data.email}!</div>

        <h1 className="text-3xl font-bold underline">Hello world!</h1>

        <button
          type="button"
          onClick={() =>
            signInMutation.mutate({
              provider: new GoogleAuthProvider(),
            })
          }
        >
          Sign In
        </button>
        <br />
        <button type="button" onClick={() => signOutMutation.mutate()}>
          Sign Out
        </button>

        {/* {query?.data &&
          query.data.map((document) => (
            <div key={document.createdAt}>{document.title}</div>
          ))} */}

        {/* {currentUser && (
          <>
            
            <h1>{currentUser?.email}</h1>
            <button
              type="button"
              onClick={() => addNewData(currentUser.uid, currData[0]?.name)}
            >
              Add new data
            </button>
          </>
        )} */}
      </main>
    </div>
  );
}
